{"version":3,"sources":["components/AddAppointment.js","components/ListAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddApointment","state","petName","ownerName","aptNotes","aptDate","aptTime","handleChanges","bind","submitAppointment","event","target","value","name","this","setState","preventDefault","temp_apt","props","addAppointment","toggleDisplay","className","aptBtnDisplay","onClick","formDisplay","noValidate","onSubmit","onChange","type","placeholder","id","rows","cols","Component","ListAppointments","listDisplay","toggleList","appointments","map","item","key","aptId","date","parse","format","App","lastIndex","temp_appointments","data","temp_index","console","log","apt","temp_apts","unshift","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2f1ed75a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AddApointment extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      petName: '',\r\n      ownerName: '',\r\n      aptNotes: '',\r\n      aptDate: '',\r\n      aptTime: ''\r\n    }\r\n\r\n    this.handleChanges = this.handleChanges.bind(this);\r\n    this.submitAppointment = this.submitAppointment.bind(this);\r\n  }\r\n\r\n  handleChanges(event){\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n\r\n  }\r\n\r\n  submitAppointment(event){\r\n    event.preventDefault();\r\n\r\n    let temp_apt = {\r\n      petName: this.state.petName,\r\n      ownerName: this.state.ownerName,\r\n      aptNotes: this.state.aptNotes,\r\n      aptDate: this.state.aptDate + ' ' + this.state.aptTime,\r\n    }\r\n\r\n    this.props.addAppointment(temp_apt);\r\n\r\n    this.setState({\r\n      petName: '',\r\n      ownerName: '',\r\n      aptNotes: '',\r\n      aptDate: '',\r\n      aptTime: ''\r\n    })\r\n\r\n    this.props.toggleDisplay();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"add-appointment-layout\">\r\n        <button className={\"layout-dropdown btn btn-primary btn-lg \" + (this.props.aptBtnDisplay ? '' : 'hidden')} onClick={this.props.toggleDisplay}>\r\n          <h5><i className=\"fas fa-user-plus\"></i> Add Appointment</h5>\r\n        </button>\r\n        \r\n        <div className={\"container \" + (this.props.formDisplay ? '' : 'hidden')}>\r\n          <div className=\"row justify-content-center\">\r\n            <section className=\"col-9 col-sm-12 col-md-10\">\r\n              <div className=\"card-header text-center\"><h5>Please enter the required information</h5></div>\r\n              <div className=\"card-body\">\r\n\r\n                <form className=\"appointment-form\" noValidate onSubmit={this.submitAppointment}>\r\n                  <div className=\"form-group form-row justify-content-center\">\r\n                    <label className=\"col-form-label\">Pet Name: </label>\r\n                    <div className=\"col-md-3 col-sm-5\">\r\n                      <input onChange={this.handleChanges} type=\"text\" className=\"form-control\" placeholder=\"Pet's name\" name=\"petName\" id=\"petName\"></input>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group form-row justify-content-center\">\r\n                    <label className=\"col-form-label\">Pet's Owner:</label>\r\n                    <div className=\"col-md-3 col-sm-5\">\r\n                      <input onChange={this.handleChanges} type=\"text\" className=\"form-control\" placeholder=\"Pet's owner\" name=\"ownerName\" id=\"ownerName\"></input>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group form-row justify-content-center\">\r\n                    <label className=\"col-form-label\">Date:</label>\r\n                    <div className=\"col-md-3 col-sm-4\">\r\n                      <input onChange={this.handleChanges} type=\"date\" className=\"form-control\" placeholder=\"\" name=\"aptDate\" id=\"aptDate\"></input>\r\n                    </div>\r\n                    <label className=\"col-form-label\">Time: </label>\r\n                    <div className=\"col-md-3 col-sm-4\">\r\n                      <input onChange={this.handleChanges} type=\"time\" className=\"form-control\" name=\"aptTime\" id=\"aptTime\"></input>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group form-row justify-content-center\">\r\n                    <label className=\"col-form-label\">Notes: </label>\r\n                    <div>\r\n                      <textarea onChange={this.handleChanges} className=\"form-control\" rows=\"4\" cols=\"50\" placeholder=\"Appointment Notes\" name=\"aptNotes\" id=\"aptNotes\"></textarea>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group form-row justify-content-center\">\r\n                    <button className=\"btn btn-danger mx-3\" onClick={this.props.toggleDisplay} type=\"reset\">Cancel</button>\r\n                    <button className=\"btn btn-info\" type=\"submit\">Submit</button>\r\n                  </div>\r\n\r\n                </form>\r\n\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddApointment;","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nclass ListAppointments extends Component {\r\n    render() {\r\n        return (\r\n            <article className=\"list-appointments-layout py-3 \">\r\n                <button className={\"btn btn-primary btn-lg \" + (this.props.listDisplay ? 'hidden' : '')} onClick={this.props.toggleList}>\r\n                    <h5><i className=\"far fa-address-book\"></i>  See Appointments  </h5>\r\n                </button>\r\n\r\n                <section className={\"container card-header \" + (this.props.listDisplay ? '' : 'hidden')}>\r\n                    <div className=\"d-flex bg-secondary\">\r\n                        <button className={\"btn btn-danger ml-auto my-2 mr-2 \"} onClick={this.props.toggleList}><i className=\"fas fa-times\"></i></button>\r\n                    </div>\r\n\r\n                    <section className=\"appointment-list row overflow-auto bg-light card-body\">\r\n                        {\r\n                            this.props.appointments.map(item => (\r\n\r\n                                <div className=\"appointment-layout row py-3 col-12\" key={item.aptId}>\r\n\r\n                                    <div className=\"col-sm-12 col-md-10 col-lg-8\">\r\n                                        <div className=\"apt-head d-flex\">\r\n                                            <h6 className=\"pet-name\">{item.petName}</h6>\r\n                                            <span className=\"apt-date ml-auto\">\r\n                                                <Moment\r\n                                                    date={item.aptDate}\r\n                                                    parse=\"YYYY-MM-dd hh:mm\"\r\n                                                    format=\"MMM-D h:mma\"\r\n                                                />\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"owner-name\">\r\n                                            <span className=\"label-item\">Owner: </span>\r\n                                            <span>{item.ownerName}</span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span className=\"label-item\">Notes: </span>\r\n                                            <span>{item.aptNotes}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </section>\r\n                </section>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListAppointments;","import React, { Component } from 'react';\nimport '../css/App.css';\n\nimport AddApointment from \"./AddAppointment\";\nimport ListAppointments from './ListAppointments';\nimport data from \"./data/data.json\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      appointments: [],\n      lastIndex: 0,\n      formDisplay: false,\n      aptBtnDisplay: true,\n      listDisplay: false\n    }\n\n    this.toggleDisplay = this.toggleDisplay.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.toggleList = this.toggleList.bind(this);\n  }\n\n  componentDidMount() {\n    const temp_appointments = data.map(item => {\n      let temp_index = this.state.lastIndex;\n      item.aptId = temp_index;\n      temp_index = + 1;\n      console.log(item.aptId);\n      this.setState({\n        lastIndex: temp_index\n      })\n      return item;\n    })\n\n    this.setState({ appointments: temp_appointments });\n\n  }\n\n  toggleDisplay() {\n    this.setState({\n      formDisplay: !this.state.formDisplay,\n      aptBtnDisplay: !this.state.aptBtnDisplay\n    })\n  }\n\n  addAppointment(apt) {\n    apt.aptId = this.state.lastIndex;\n    let temp_apts = this.state.appointments;\n    temp_apts.unshift(apt);\n\n    this.setState({\n      appointments: temp_apts,\n      lastIndex: this.state.lastIndex + 1\n    })\n  }\n\n  toggleList() {\n    this.setState({\n      listDisplay: !this.state.listDisplay\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <AddApointment\n          formDisplay={this.state.formDisplay}\n          aptBtnDisplay={this.state.aptBtnDisplay}\n          toggleDisplay={this.toggleDisplay}\n          addAppointment={this.addAppointment}\n        />\n        <ListAppointments\n          appointments={this.state.appointments}\n          listDisplay={this.state.listDisplay}\n          toggleList={this.toggleList}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport './font-awesome/css/all.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(<App />, document.getElementById('appointment-app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}